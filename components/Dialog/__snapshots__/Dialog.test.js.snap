// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Dialog> renders 1`] = `
<View
  pointerEvents="none"
  style={
    Object {
      "height": "100%",
      "left": 0,
      "maxHeight": "100%",
      "position": "absolute",
      "top": 0,
      "width": "100%",
      "zIndex": 2,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Array [
        Object {
          "alignContent": "center",
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        },
        Object {
          "backgroundColor": "rgba(0,0,0,0.5)",
        },
        Array [],
      ]
    }
  >
    <View
      onLayout={[Function]}
      style={
        Array [
          Array [
            Object {
              "maxHeight": "100%",
              "maxWidth": "100%",
              "minWidth": 320,
              "position": "absolute",
              "width": "100%",
            },
          ],
          Object {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <View
        pointerEvents="auto"
        style={Object {}}
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": undefined,
                "borderRadius": 2.4,
                "shadowColor": "#191919",
                "shadowOffset": Object {
                  "height": 4,
                  "width": 0,
                },
                "shadowOpacity": 0.3,
                "shadowRadius": 24,
              },
              Array [],
            ]
          }
        >
          <View
            style={
              Object {
                "alignContent": "center",
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "paddingHorizontal": 4,
                "paddingVertical": 4,
              }
            }
          />
          <RCTScrollView
            style={
              Array [
                Object {
                  "paddingBottom": 16,
                  "paddingHorizontal": 16,
                },
                false,
              ]
            }
          >
            <View />
          </RCTScrollView>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
</View>
`;

exports[`<Dialog> when {background} 1`] = `
<View
  pointerEvents="none"
  style={
    Object {
      "height": "100%",
      "left": 0,
      "maxHeight": "100%",
      "opacity": 0,
      "position": "absolute",
      "top": 0,
      "width": "100%",
      "zIndex": 2,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Array [
        Object {
          "alignContent": "center",
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        },
        false,
        Array [],
      ]
    }
  >
    <View
      onLayout={[Function]}
      style={
        Array [
          Array [
            Object {
              "maxHeight": "100%",
              "maxWidth": "100%",
              "minWidth": 320,
              "position": "absolute",
              "width": "100%",
            },
          ],
          Object {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <View
        pointerEvents="auto"
        style={
          Object {
            "transform": Array [
              Object {
                "translateY": 1334,
              },
            ],
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": undefined,
                "borderRadius": 2.4,
                "shadowColor": "#191919",
                "shadowOffset": Object {
                  "height": 4,
                  "width": 0,
                },
                "shadowOpacity": 0.3,
                "shadowRadius": 24,
              },
              Array [],
            ]
          }
        >
          <View
            style={
              Object {
                "alignContent": "center",
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "paddingHorizontal": 4,
                "paddingVertical": 4,
              }
            }
          />
          <RCTScrollView
            style={
              Array [
                Object {
                  "paddingBottom": 16,
                  "paddingHorizontal": 16,
                },
                false,
              ]
            }
          >
            <View />
          </RCTScrollView>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
</View>
`;

exports[`<Dialog> when {children} 1`] = `
<View
  pointerEvents="none"
  style={
    Object {
      "height": "100%",
      "left": 0,
      "maxHeight": "100%",
      "position": "absolute",
      "top": 0,
      "width": "100%",
      "zIndex": 2,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Array [
        Object {
          "alignContent": "center",
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        },
        Object {
          "backgroundColor": "rgba(0,0,0,0.5)",
        },
        Array [],
      ]
    }
  >
    <View
      onLayout={[Function]}
      style={
        Array [
          Array [
            Object {
              "maxHeight": "100%",
              "maxWidth": "100%",
              "minWidth": 320,
              "position": "absolute",
              "width": "100%",
            },
          ],
          Object {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <View
        pointerEvents="auto"
        style={Object {}}
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": undefined,
                "borderRadius": 2.4,
                "shadowColor": "#191919",
                "shadowOffset": Object {
                  "height": 4,
                  "width": 0,
                },
                "shadowOpacity": 0.3,
                "shadowRadius": 24,
              },
              Array [],
            ]
          }
        >
          <View
            style={
              Object {
                "alignContent": "center",
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "paddingHorizontal": 4,
                "paddingVertical": 4,
              }
            }
          />
          <RCTScrollView
            style={
              Array [
                Object {
                  "paddingBottom": 16,
                  "paddingHorizontal": 16,
                },
                false,
              ]
            }
          >
            <View>
              <Text
                style={
                  Array [
                    Object {
                      "color": "#191919",
                      "fontFamily": undefined,
                      "textAlignVertical": "center",
                    },
                    Object {
                      "fontSize": 12.8,
                      "lineHeight": 15.36,
                    },
                    false,
                    Object {},
                  ]
                }
              >
                lorem ipsum...
              </Text>
            </View>
          </RCTScrollView>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
</View>
`;

exports[`<Dialog> when {highlight} 1`] = `
<View
  pointerEvents="none"
  style={
    Object {
      "height": "100%",
      "left": 0,
      "maxHeight": "100%",
      "opacity": 0,
      "position": "absolute",
      "top": 0,
      "width": "100%",
      "zIndex": 2,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Array [
        Object {
          "alignContent": "center",
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        },
        Object {
          "backgroundColor": "rgba(0,0,0,0.5)",
        },
        Array [],
      ]
    }
  >
    <View
      onLayout={[Function]}
      style={
        Array [
          Array [
            Object {
              "maxHeight": "100%",
              "maxWidth": "100%",
              "minWidth": 320,
              "position": "absolute",
              "width": "100%",
            },
          ],
          Object {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <View
        pointerEvents="auto"
        style={
          Object {
            "transform": Array [
              Object {
                "translateY": 1334,
              },
            ],
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": undefined,
                "borderRadius": 2.4,
                "shadowColor": "#191919",
                "shadowOffset": Object {
                  "height": 4,
                  "width": 0,
                },
                "shadowOpacity": 0.3,
                "shadowRadius": 24,
              },
              Array [],
            ]
          }
        >
          <View
            style={
              Object {
                "alignContent": "center",
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "paddingHorizontal": 4,
                "paddingVertical": 4,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#191919",
                    "fontFamily": undefined,
                    "textAlignVertical": "center",
                  },
                  Object {
                    "fontSize": 14.4,
                  },
                  false,
                  Object {
                    "color": "#ffffff",
                    "flex": 1,
                    "fontWeight": "700",
                    "paddingHorizontal": 4,
                  },
                ]
              }
            >
              Lorem ipsum...
            </Text>
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onLayout={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              pointerEvents="box-only"
              style={
                Array [
                  undefined,
                  Array [
                    Object {
                      "alignContent": "center",
                      "alignItems": "center",
                      "alignSelf": "flex-start",
                      "justifyContent": "center",
                      "width": "auto",
                    },
                    undefined,
                    Object {
                      "backgroundColor": "#ffffff",
                      "borderRadius": undefined,
                    },
                    undefined,
                    Object {
                      "height": 48,
                      "paddingHorizontal": 16,
                    },
                    undefined,
                  ],
                ]
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "row",
                  }
                }
              >
                <Text />
              </View>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderRadius": 2.4,
                      "bottom": 0,
                      "left": 0,
                      "overflow": "hidden",
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "#ffffff",
                      "height": 0,
                      "opacity": 0,
                      "width": 0,
                      "zIndex": 0,
                    }
                  }
                />
              </View>
            </View>
          </View>
          <RCTScrollView
            onScroll={[Function]}
            style={
              Array [
                Object {
                  "paddingBottom": 16,
                  "paddingHorizontal": 16,
                },
                false,
              ]
            }
          >
            <View />
          </RCTScrollView>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
</View>
`;

exports[`<Dialog> when {onClose} 1`] = `
<View
  pointerEvents="none"
  style={
    Object {
      "height": "100%",
      "left": 0,
      "maxHeight": "100%",
      "position": "absolute",
      "top": 0,
      "width": "100%",
      "zIndex": 2,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Array [
        Object {
          "alignContent": "center",
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        },
        Object {
          "backgroundColor": "rgba(0,0,0,0.5)",
        },
        Array [],
      ]
    }
  >
    <View
      onLayout={[Function]}
      style={
        Array [
          Array [
            Object {
              "maxHeight": "100%",
              "maxWidth": "100%",
              "minWidth": 320,
              "position": "absolute",
              "width": "100%",
            },
          ],
          Object {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <View
        pointerEvents="auto"
        style={Object {}}
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": undefined,
                "borderRadius": 2.4,
                "shadowColor": "#191919",
                "shadowOffset": Object {
                  "height": 4,
                  "width": 0,
                },
                "shadowOpacity": 0.3,
                "shadowRadius": 24,
              },
              Array [],
            ]
          }
        >
          <View
            style={
              Object {
                "alignContent": "center",
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "paddingHorizontal": 4,
                "paddingVertical": 4,
              }
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onLayout={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              pointerEvents="box-only"
              style={
                Array [
                  undefined,
                  Array [
                    Object {
                      "alignContent": "center",
                      "alignItems": "center",
                      "alignSelf": "flex-start",
                      "justifyContent": "center",
                      "width": "auto",
                    },
                    undefined,
                    Object {
                      "backgroundColor": "#191919",
                      "borderRadius": undefined,
                    },
                    undefined,
                    Object {
                      "height": 48,
                      "paddingHorizontal": 16,
                    },
                    undefined,
                  ],
                ]
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "row",
                  }
                }
              >
                <Text />
              </View>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderRadius": 2.4,
                      "bottom": 0,
                      "left": 0,
                      "overflow": "hidden",
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "#ffffff",
                      "height": 0,
                      "opacity": 0,
                      "width": 0,
                      "zIndex": 0,
                    }
                  }
                />
              </View>
            </View>
          </View>
          <RCTScrollView
            style={
              Array [
                Object {
                  "paddingBottom": 16,
                  "paddingHorizontal": 16,
                },
                false,
              ]
            }
          >
            <View />
          </RCTScrollView>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
</View>
`;

exports[`<Dialog> when {reverse} 1`] = `
<View
  pointerEvents="auto"
  style={
    Object {
      "height": "100%",
      "left": 0,
      "maxHeight": "100%",
      "position": "absolute",
      "top": 0,
      "width": "100%",
      "zIndex": 2,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Array [
        Object {
          "alignContent": "center",
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        },
        Object {
          "backgroundColor": "rgba(0,0,0,0.5)",
        },
        Array [],
      ]
    }
  >
    <View
      onLayout={[Function]}
      style={
        Array [
          Array [
            Object {
              "maxHeight": "100%",
              "maxWidth": "100%",
              "minWidth": 320,
              "position": "absolute",
              "width": "100%",
            },
          ],
          Object {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <View
        pointerEvents="auto"
        style={Object {}}
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": undefined,
                "borderRadius": 2.4,
                "shadowColor": "#191919",
                "shadowOffset": Object {
                  "height": 4,
                  "width": 0,
                },
                "shadowOpacity": 0.3,
                "shadowRadius": 24,
              },
              Array [],
            ]
          }
        >
          <View
            style={
              Object {
                "alignContent": "center",
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "paddingHorizontal": 4,
                "paddingVertical": 4,
              }
            }
          />
          <RCTScrollView
            style={
              Array [
                Object {
                  "paddingBottom": 16,
                  "paddingHorizontal": 16,
                },
                false,
              ]
            }
          >
            <View />
          </RCTScrollView>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
</View>
`;

exports[`<Dialog> when {style} 1`] = `
<View
  pointerEvents="none"
  style={
    Object {
      "height": "100%",
      "left": 0,
      "maxHeight": "100%",
      "position": "absolute",
      "top": 0,
      "width": "100%",
      "zIndex": 2,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Array [
        Object {
          "alignContent": "center",
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        },
        Object {
          "backgroundColor": "rgba(0,0,0,0.5)",
        },
        Array [],
      ]
    }
  >
    <View
      onLayout={[Function]}
      style={
        Array [
          Array [
            Object {
              "maxHeight": "100%",
              "maxWidth": "100%",
              "minWidth": 320,
              "position": "absolute",
              "width": "100%",
            },
          ],
          Object {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <View
        pointerEvents="auto"
        style={Object {}}
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": undefined,
                "borderRadius": 2.4,
                "shadowColor": "#191919",
                "shadowOffset": Object {
                  "height": 4,
                  "width": 0,
                },
                "shadowOpacity": 0.3,
                "shadowRadius": 24,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Object {
                "alignContent": "center",
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "paddingHorizontal": 4,
                "paddingVertical": 4,
              }
            }
          />
          <RCTScrollView
            style={
              Array [
                Object {
                  "paddingBottom": 16,
                  "paddingHorizontal": 16,
                },
                false,
              ]
            }
          >
            <View />
          </RCTScrollView>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
</View>
`;

exports[`<Dialog> when {styleContainer} 1`] = `
<View
  pointerEvents="none"
  style={
    Object {
      "height": "100%",
      "left": 0,
      "maxHeight": "100%",
      "opacity": 0,
      "position": "absolute",
      "top": 0,
      "width": "100%",
      "zIndex": 2,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Array [
        Object {
          "alignContent": "center",
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        },
        Object {
          "backgroundColor": "rgba(0,0,0,0.5)",
        },
        Object {
          "backgroundColor": "#e85a7e",
          "height": "50%",
        },
      ]
    }
  >
    <View
      onLayout={[Function]}
      style={
        Array [
          Array [
            Object {
              "maxHeight": "100%",
              "maxWidth": "100%",
              "minWidth": 320,
              "position": "absolute",
              "width": "100%",
            },
          ],
          Object {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <View
        pointerEvents="auto"
        style={
          Object {
            "transform": Array [
              Object {
                "translateY": 1334,
              },
            ],
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": undefined,
                "borderRadius": 2.4,
                "shadowColor": "#191919",
                "shadowOffset": Object {
                  "height": 4,
                  "width": 0,
                },
                "shadowOpacity": 0.3,
                "shadowRadius": 24,
              },
              Array [],
            ]
          }
        >
          <View
            style={
              Object {
                "alignContent": "center",
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "paddingHorizontal": 4,
                "paddingVertical": 4,
              }
            }
          />
          <RCTScrollView
            style={
              Array [
                Object {
                  "paddingBottom": 16,
                  "paddingHorizontal": 16,
                },
                false,
              ]
            }
          >
            <View />
          </RCTScrollView>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
</View>
`;

exports[`<Dialog> when {title} 1`] = `
<View
  pointerEvents="none"
  style={
    Object {
      "height": "100%",
      "left": 0,
      "maxHeight": "100%",
      "opacity": 0,
      "position": "absolute",
      "top": 0,
      "width": "100%",
      "zIndex": 2,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Array [
        Object {
          "alignContent": "center",
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        },
        Object {
          "backgroundColor": "rgba(0,0,0,0.5)",
        },
        Array [],
      ]
    }
  >
    <View
      onLayout={[Function]}
      style={
        Array [
          Array [
            Object {
              "maxHeight": "100%",
              "maxWidth": "100%",
              "minWidth": 320,
              "position": "absolute",
              "width": "100%",
            },
          ],
          Object {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <View
        pointerEvents="auto"
        style={
          Object {
            "transform": Array [
              Object {
                "translateY": 1334,
              },
            ],
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": undefined,
                "borderRadius": 2.4,
                "shadowColor": "#191919",
                "shadowOffset": Object {
                  "height": 4,
                  "width": 0,
                },
                "shadowOpacity": 0.3,
                "shadowRadius": 24,
              },
              Array [],
            ]
          }
        >
          <View
            style={
              Object {
                "alignContent": "center",
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "paddingHorizontal": 4,
                "paddingVertical": 4,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#191919",
                    "fontFamily": undefined,
                    "textAlignVertical": "center",
                  },
                  Object {
                    "fontSize": 14.4,
                  },
                  false,
                  Object {
                    "flex": 1,
                    "fontWeight": "700",
                    "paddingHorizontal": 4,
                  },
                ]
              }
            >
              Lorem ipsum...
            </Text>
          </View>
          <RCTScrollView
            onScroll={[Function]}
            style={
              Array [
                Object {
                  "paddingBottom": 16,
                  "paddingHorizontal": 16,
                },
                false,
              ]
            }
          >
            <View />
          </RCTScrollView>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
</View>
`;

exports[`<Dialog> when {visible} 1`] = `
<View
  pointerEvents="auto"
  style={
    Object {
      "height": "100%",
      "left": 0,
      "maxHeight": "100%",
      "opacity": 1,
      "position": "absolute",
      "top": 0,
      "width": "100%",
      "zIndex": 2,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Array [
        Object {
          "alignContent": "center",
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        },
        Object {
          "backgroundColor": "rgba(0,0,0,0.5)",
        },
        Array [],
      ]
    }
  >
    <View
      onLayout={[Function]}
      style={
        Array [
          Array [
            Object {
              "maxHeight": "100%",
              "maxWidth": "100%",
              "minWidth": 320,
              "position": "absolute",
              "width": "100%",
            },
          ],
          Object {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <View
        pointerEvents="auto"
        style={
          Object {
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": undefined,
                "borderRadius": 2.4,
                "shadowColor": "#191919",
                "shadowOffset": Object {
                  "height": 4,
                  "width": 0,
                },
                "shadowOpacity": 0.3,
                "shadowRadius": 24,
              },
              Array [],
            ]
          }
        >
          <View
            style={
              Object {
                "alignContent": "center",
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "paddingHorizontal": 4,
                "paddingVertical": 4,
              }
            }
          />
          <RCTScrollView
            style={
              Array [
                Object {
                  "paddingBottom": 16,
                  "paddingHorizontal": 16,
                },
                false,
              ]
            }
          >
            <View />
          </RCTScrollView>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
</View>
`;
