// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<InputSwitch> renders 1`] = `
<View
  style={
    Array [
      Object {
        "display": "flex",
        "flexDirection": "row",
        "height": "auto",
        "width": "100%",
      },
      Object {
        "alignItems": "center",
      },
      Object {
        "justifyContent": "flex-start",
      },
      undefined,
      Object {
        "height": 40,
      },
    ]
  }
>
  <RCTSwitch
    accessibilityRole="switch"
    activeThumbColor="#ffffff"
    activeTrackColor="#191919"
    onChange={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "height": 31,
          "width": 51,
        },
        Object {
          "height": 24,
          "marginRight": 8,
        },
      ]
    }
    thumbTintColor="#ffffff"
    value={false}
  />
</View>
`;

exports[`<InputSwitch> when {color} 1`] = `
<View
  style={
    Array [
      Object {
        "display": "flex",
        "flexDirection": "row",
        "height": "auto",
        "width": "100%",
      },
      Object {
        "alignItems": "center",
      },
      Object {
        "justifyContent": "flex-start",
      },
      undefined,
      Object {
        "height": 40,
      },
    ]
  }
>
  <RCTSwitch
    accessibilityRole="switch"
    activeThumbColor="#ffffff"
    activeTrackColor="green"
    onChange={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "height": 31,
          "width": 51,
        },
        Object {
          "height": 24,
          "marginRight": 8,
        },
      ]
    }
    thumbTintColor="#ffffff"
    value={true}
  />
</View>
`;

exports[`<InputSwitch> when {disabled} 1`] = `
<View
  style={
    Array [
      Object {
        "display": "flex",
        "flexDirection": "row",
        "height": "auto",
        "width": "100%",
      },
      Object {
        "alignItems": "center",
      },
      Object {
        "justifyContent": "flex-start",
      },
      undefined,
      Object {
        "height": 40,
      },
    ]
  }
>
  <RCTSwitch
    accessibilityRole="switch"
    activeThumbColor="#ffffff"
    activeTrackColor="#191919"
    onChange={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "height": 31,
          "width": 51,
        },
        Object {
          "height": 24,
          "marginRight": 8,
        },
      ]
    }
    thumbTintColor="#ffffff"
    value={false}
  />
</View>
`;

exports[`<InputSwitch> when {label} 1`] = `
<View
  style={
    Array [
      Object {
        "display": "flex",
        "flexDirection": "row",
        "height": "auto",
        "width": "100%",
      },
      Object {
        "alignItems": "center",
      },
      Object {
        "justifyContent": "flex-start",
      },
      undefined,
      Object {
        "height": 40,
      },
    ]
  }
>
  <RCTSwitch
    accessibilityRole="switch"
    activeThumbColor="#ffffff"
    activeTrackColor="#191919"
    onChange={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "height": 31,
          "width": 51,
        },
        Object {
          "height": 24,
          "marginRight": 8,
        },
      ]
    }
    thumbTintColor="#ffffff"
    value={false}
  />
</View>
`;

exports[`<InputSwitch> when {style} 1`] = `
<View
  style={
    Array [
      Object {
        "display": "flex",
        "flexDirection": "row",
        "height": "auto",
        "width": "100%",
      },
      Object {
        "alignItems": "center",
      },
      Object {
        "justifyContent": "flex-start",
      },
      undefined,
      Object {
        "height": 40,
      },
    ]
  }
>
  <RCTSwitch
    accessibilityRole="switch"
    activeThumbColor="#ffffff"
    activeTrackColor="#191919"
    onChange={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "height": 31,
          "width": 51,
        },
        Object {
          "height": 24,
          "marginRight": 8,
        },
      ]
    }
    thumbTintColor="#ffffff"
    value={false}
  />
</View>
`;
